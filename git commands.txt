  git --help AND git help --all AND git <command> --help FOR HELP
  man gittutorial AND man giteveryday AND man gitcli AND man gitusersmanual AND man git FOR MORE HELP
  
  
  git config --global user.name "dmkUK" SET GLOBAL USERNAME SAME AS GITHUB
  git config --global user.email "128807550+dmkUK@users.noreply.github.com" SET EMAIL SAME AS GITHUB
  
  
  git status DISPLAYS STATUS OF WORKING TREE IE WHAT WOULD BE COMMITED OR COULD BE READIED FOR COMMIT
  git log DISPLAYS HISTORY OF COMMITS FOR REPOSITORY
  git init START GIT TRACKING ON CURRENT FOLDER
  git branch DISPLAYS THE THE CURRENT AND AVAILABLE BRANCHES.
  git branch --list 'pattern' LISTS BRANCHES WITH NAMES MATCHING PATTERN
  git branch -avv LIST LOCAL AND REMOTE BRANCHES VERBOSELY
  git branch <branch name> CREATES A NEW BRANCH
  git checkout -b <branch name> CREATES A NEW BRACH AND SWITCHES TO IT
  git branch -m <old branch name> <new branch name> MOVE / RENAME BRANCH
  git checkout <branch name> TO SWITCH BRANCHES TO GET TO CORRECT VERSION.
  git add <filename> TO STAGE A FILE AND PREPARE FOR COMMIT.
  git add --all TO STAGE ALL FILES AND PREAPARE FOR COMMIT.
  git commit -m <comment> TO COMMIT CHANGES TO CURRENT BRANCH.
  git diff <file> TO SEE CHANGES TO A SPECIFIC FILE IN THE WORKING TREE WITH THE INDEX.
  git diff --cached (--staged) TO SEE THE CHANGES THAT HAVE BEEN STAGED.
  git restore <file> TO RESTORE CHANGES TO A FILE BACK TO VERSION IN THE INDEX.
  git reset <refference> IMPIES --soft DOES NOT CHANGE THE WORKING TREE, ADDS CHANGED FILES TO STAGING RESETTING TO STATE BEFORE COMMIT. "HEAD~1" REFFERS TO THE LAST COMMIT "HEAD~3" THE LAST THREE COMMITS TO REMOVE
  git merge <branch name> MERGE THE NAMED BRANCH INTO THE CURRENT BRANCH
  git branch -d <branch name> DELETE A BRANCH
  
  
  git clone <remote URL> MAKE A LOCAL COPY OF THE REMOTE (eg GITHUB) REPOSITORY
  git remote -v DISPLAY CURRENT LOCAL REPOSITORIES ORIGIN URLS TO FETCH FROM AND PUSH TO REMOTE REPOSITORIES
  
  Glossary
  ========
  HEAD - a reference pointer to the current commit on the current branch (normally the latest).
  DETACHED HEAD - if HEAD refers to a commit which is not the latest
  INDEX - (cache, directory cache, current directory cache, staging area, staged files) a list of all the files in the current branch representing the staging area for the next commit
  WORKING TREE - (working directory) the files currently undergoing editing in the current branch
  TAG - fixed reference to a specific commit usually a version revision.

						HEAD here points to commit#4
						|
						BRANCH MASTER
						|
COMMIT#1 <---->	COMMIT#2 <---->	COMMIT#3 <---->	COMMIT#4
		\_______________	
				|
				COMMIT#5 <---->	COMMIT#6
				|		|
				|		BRANCH TESTING
				|
				HEAD -(DETACHED) here points to commit#5
