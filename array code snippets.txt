old_IFS=$IFS
image_types='JPG ORF'
working_dir="./working/"
backup_dir="./backup/"
for filename_extension in $image_types
do
	IFS=,$'\n'
	target_string=$(exiftool -p '${filename},${datetimeoriginal}' -d '%Y/raw images/%m %b/%Y_%m_%d/' *."$filename_extension")
	target_array=($target_string)
	i=0
	while ((i<${#target_array[*]}))
	do
		echo -n $i$'\r'
		rsync --mkpath -ah ${target_array[i]} "$working_dir"${target_array[((i+1))]}${target_array[i]}
		rsync --mkpath -ah ${target_array[i]} "$backup_dir"${target_array[((i+1))]}${target_array[i]}
		((i+=2))
	done
done
IFS=$old_IFS

# make a copy of default IFS setting (IFS=$' \t\n')
# set image_types variable
# set working_dir variable
# set backup_dir variable
# open for loop compound command to iterate thru' image types
# do commands
# sets the delimeter for word splitting to ',' or newline
# place output of exiftool into a variable as a list formatted filename date only
# create array from list. Even numbered elements (0,2,4..) represent filenames, odd numbered (1,3,5..) represent paths.
# set counter to zero
# open while loop on condition counter i is less than the number of elements in array
# do commands
# echo the counter to tty
# rsync command to make the path and copy the file counter i points to the filename, counter i+1 points to the path.
# increase counter by two to advance to the next filename
# close while loop
# close for loop
# reset IFS to default equivalent to IFS=$' \t\n'


# echo ${#tdir_array[*]} read number elements in array
# echo ${tdir_array[*]} read all items in array
# echo ${tdir_array[1]} read item 1 in array
